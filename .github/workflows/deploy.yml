name: Deploy to Firebase App Hosting

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build
        env:
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          ADMIN_PRIVATE_KEY: ${{ secrets.ADMIN_PRIVATE_KEY }}
          ADMIN_CLIENT_EMAIL: ${{ secrets.ADMIN_CLIENT_EMAIL }}
          ADMIN_PROJECT_ID: ${{ secrets.ADMIN_PROJECT_ID }}
        run: |
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> .env.production
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN	=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN	 }}" >> .env.production
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> .env.production
          echo "STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}" >> .env.production
          echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" >> .env.production
          echo "ADMIN_PRIVATE_KEY=${{ secrets.ADMIN_PRIVATE_KEY }}" >> .env.production
          echo "ADMIN_CLIENT_EMAIL=${{ secrets.ADMIN_CLIENT_EMAIL }}" >> .env.production
          echo "ADMIN_PROJECT_ID=${{ secrets.ADMIN_PROJECT_ID }}" >> .env.production

          npm run build

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PROJECTUDE }}
          channelId: live
          projectId: projectude-new
